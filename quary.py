import pandas as pd
import os
import io

def query_morpheme(file_path=None, csv_data=None, df=None, query=None):
    """
    Query morphemes with exact matching and return their meanings.
    
    Args:
        file_path (str, optional): Path to CSV file (morpheme,meaning columns).
        csv_data (str, optional): CSV content as a string.
        df (pd.DataFrame, optional): Pre-loaded DataFrame.
        query (str): Morpheme to search (e.g., '-an', 'adip/o').
    
    Returns:
        list: List of meanings for matching morphemes, e.g., ['not, without'].
              Returns empty list if no matches or error.
    """
    if not query or not isinstance(query, str):
        return []
    if not file_path and not csv_data and df is None:
        return []

    query = query.strip()

    try:
        if df is not None:
            data = df if isinstance(df, pd.DataFrame) else None
        elif file_path:
            data = pd.read_csv(file_path, usecols=['morpheme', 'meaning'], encoding='utf-8')
        else:
            data = pd.read_csv(io.StringIO(csv_data), usecols=['morpheme', 'meaning'])
        
        data = data.dropna().apply(lambda x: x.str.strip() if x.dtype == "object" else x)
        if data.empty:
            return []
            
    except (FileNotFoundError, pd.errors.EmptyDataError, KeyError, pd.errors.ParserError):
        return []

    matches = []
    for _, row in data.iterrows():
        morpheme = row['morpheme']
        if query.lower() == morpheme.lower():
            matches.append(row['meaning'])
    
    return matches

if __name__ == "__main__":
    # 获取当前脚本的绝对路径
    script_dir = os.path.dirname(os.path.abspath(__file__))

    # 定义数据目录名和CSV文件名
    DATA_DIRECTORY_NAME = 'data'
    CSV_FILE_NAME = 'Medical_Word_Elements_Cleaned.csv'

    # 构建完整路径：在脚本目录内拼接 'data' 文件夹
    data_directory_path = os.path.join(script_dir, DATA_DIRECTORY_NAME)
    csv_file_path = os.path.join(data_directory_path, CSV_FILE_NAME)
    file_path = csv_file_path
    # file_path = r"D:\Study\Science\English_Terminology\Medical_Word_Elements_Cleaned.csv"
    try:
        real_csv = pd.read_csv(file_path)
    except FileNotFoundError:
        real_csv = None
    test_queries = [
        '-ad',
        '-ase',
        '-asthenia',
        '-blast',
        '-capnia',
        '-ceps',
        '-ception',
        '-cide',
        '-clasia',
        '-clasis',
        '-clast',
        '-cle',
        '-cyte',
        '-desis',
        '-dynia',
        '-ectasia',
        '-ectasis',
        '-edema',
        '-emesis',
        '-emia',
        '-esthesia',
        '-form',
        '-gen',
        '-globin',
        '-gon',
        '-ia',
        '-in',
        '-ism',
        '-ist',
        '-itis',
        '-ity',
        '-kinesia',
        '-kinesis',
        '-lemma',
        '-lexia',
        '-listhesis',
        '-lith',
        '-lithiasis',
        '-logy',
        '-lysis',
        '-lytic',
        '-malacia',
        '-mania',
        '-megaly',
        '-meter',
        '-metry',
        '-oid',
        '-oma',
        '-opia',
        '-orexia',
        '-or',
        '-osis',
        '-oxia',
        '-penia',
        '-pepsia',
        '-pexy',
        '-phagia',
        '-phil',
        '-phobia',
        '-phonia',
        '-phrenia',
        '-physis',
        '-plasia',
        '-plasm',
        '-plasty',
        '-plegia',
        '-plegic',
        '-pnea',
        '-porosis',
        '-ptosis',
        '-ptysis',
        '-rrhage',
        '-rrhagia',
        '-rrhaphy',
        '-rrhea',
        '-sarcoma',
        '-schisis',
        '-sclerosis',
        '-scope',
        '-scopy',
        '-shisis',
        '-sis',
        '-spasm',
        '-stasis',
        '-stenosis',
        '-stomy',
        '-taxia',
        '-thorax',
        '-tic',
        '-tome',
        '-tonia',
        '-tomy',
        '-tropic',
        '-um',
        'a-',
        'ab-',
        'abdomin/o',
        'acr/o',
        'aden/o',
        'ad-',
        'alveol/o',
        'amphi-',
        'amyl/o',
        'an-',
        'an/o',
        'anti-',
        'aort/o',
        'append/o',
        'appendic/o',
        'arachn/o',
        'arteri/o',
        'arteriol/o',
        'arthr/o',
        'articul/o',
        'astr/o',
        'atel/o',
        'atri/o',
        'axill/o',
        'bas/o',
        'bi-',
        'bi/o',
        'bil/i',
        'brachi/o',
        'brachy-',
        'bronchi/o',
        'bronch/o',
        'bronchiol/o',
        'bucc/o',
        'brady-',
        'burs/o',
        'cardi/o',
        'cardiomy/o',
        'carp/o',
        'caud/o',
        'cec/o',
        'centi-',
        'cephal/o',
        'cerebell/o',
        'cerebr/o',
        'cervic/o',
        'cheil/o',
        'chir/o',
        'chol/e',
        'cholangi/o',
        'cholecyst/o',
        'choledoch/o',
        'chondr/o',
        'circum-',
        'coagul/o',
        'col/o',
        'colon/o',
        'coni/o',
        'contra-',
        'coron/o',
        'cortic/o',
        'cost/o',
        'counter-',
        'crani/o',
        'cruc/i',
        'cry/o',
        'cusp',
        'cutane/o',
        'cyst/o',
        'cyt/o',
        'dactyl/o',
        'de-',
        'deca-',
        'deci-',
        'dendr/i',
        'dent/i',
        'derm/o',
        'dermis',
        'de-',
        'di-',
        'dia-',
        'dis-',
        'disk/o',
        'duct',
        'dur/o',
        'duoden/o',
        'dys-',
        'electr/o',
        'embol/o',
        'encephala/o',
        'encephal/o',
        'enter/o',
        'epi-',
        'epiglott/o',
        'erect',
        'erythr/o',
        'esophag/o',
        'eu-',
        'extra-',
        'faci/o',
        'fasci/o',
        'femor/o',
        'fibr/o',
        'gastr/o',
        'gangli/o',
        'ganglion/o',
        'gli/o',
        'gloss/o',
        'gluc/o',
        'glyc/o',
        'granul/o',
        'gynec/o',
        'gyr/o',
        'hebe-',
        'hecto-',
        'hem/o',
        'hemat/o',
        'hemi-',
        'hepat/o',
        'hermi/o',
        'hydr/o',
        'iatr/o',
        'ile/o',
        'im-',
        'in-',
        'inguin/o',
        'inter-',
        'intra-',
        'is/o',
        'jejun/o',
        'kary/o',
        'kilo-',
        'klept/o',
        'labi/o',
        'later/o',
        'laryng/o',
        'leiomy/o',
        'lept/o',
        'leuk/o',
        'ligament/o',
        'lingu/o',
        'lip/o',
        'lob/o',
        'lumb/o',
        'lunar',
        'mega-',
        'megal/o',
        'mediastin/o',
        'medull/o',
        'melan/o',
        'menisc/o',
        'mening/o',
        'meta-',
        'milli-',
        'mnes/o',
        'mono-',
        'morph/o',
        'muscul/o',
        'my/o',
        'myel/o',
        'myocardi/o',
        'myx/o',
        'nas/o',
        'nephr/o',
        'neur/o',
        'non-',
        'nucle/o',
        'ocul/o',
        'odont/o',
        'omphal/o',
        'or/o',
        'orth/o',
        'oste/o',
        'ox/i',
        'palat/o',
        'pancreat/o',
        'para-',
        'ped/o',
        'per-',
        'peri-',
        'pericardi/o',
        'phag/o',
        'pharmac/o',
        'pharyng/o',
        'phleb/o',
        'phren/o',
        'pneum/o',
        'pneumon/o',
        'pod/o',
        'poli/o',
        'poly-',
        'pont/o',
        'poplit/o',
        'proct/o',
        'prosop/o',
        'psych/o',
        'pulmon/o',
        'pyr/o',
        'py/o',
        'quadri-',
        'radi/o',
        'rachi/o',
        'radicul/o',
        'rect/o',
        'ren/o',
        'reticul/o',
        'rhin/o',
        'sarc/o',
        'schiz/o',
        'semi-',
        'sept/o',
        'sider/o',
        'sigmoid/o',
        'somat/o',
        'somn/i',
        'sphygm/o',
        'sphincter/o',
        'sphere',
        'spher/o',
        'spir/o',
        'splen/o',
        'spondyl/o',
        'stern/o',
        'steth/o',
        'stomat/o',
        'sub-',
        'sym-',
        'synovi/o',
        'tachy-',
        'tars/o',
        'ten/o',
        'tend/o',
        'tendin/o',
        'thalam/o',
        'therm/o',
        'thromb/o',
        'trache/o',
        'trans-',
        'tri-',
        'troph/o',
        'un-',
        'uni-',
        'ur/o',
        'urethr/o',
        'valvul/o',
        'ven/o',
        'venul/o',
        'ventricul/o',
        'vertebr/o',
        'watt'
    ]
    for q in test_queries:
        results = query_morpheme(df=real_csv, query=q)
        if len(results) == 0 :
            print(f"Query [{q}] 's result is None")
        # print(f"Query: {q}")
        # print(f"Results: {results}\n")

'''
    test_queries = [
    'a-', 'an-', 'anti-', 'contra-', 'counter-', 'de-', 'dis-', 'in-', 'im-', 'non-', 'un-'
]
'''